buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  apply from: new File("./dependencies.gradle")

  dependencies {
    classpath dep.gradleBuildScan
    classpath dep.kotlinGradlePlugin
    classpath dep.junitGradlePlugin
    classpath dep.shadowJarPlugin
    classpath dep.mavenPublishGradlePlugin
  }
}

apply plugin: 'com.gradle.build-scan'

buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  termsOfServiceAgree = 'yes'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'kotlin'
  apply plugin: 'org.junit.platform.gradle.plugin'
  apply plugin: 'com.github.johnrengelman.shadow'

  buildscript {
    repositories {
      mavenCentral()
      jcenter()
    }

    dependencies {
      classpath dep.kotlinGradlePlugin
      classpath dep.junitGradlePlugin
      classpath dep.shadowJarPlugin
      classpath dep.mavenPublishGradlePlugin
    }
  }

  repositories {
    mavenCentral()
    jcenter()
  }
  compileKotlin {
    kotlinOptions {
      jvmTarget = "1.8"
      allWarningsAsErrors = true
    }
  }
  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "1.8"
      allWarningsAsErrors = true
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
  }

  dependencies {
    testImplementation dep.junitApi
    testRuntimeOnly dep.junitEngine
  }
  test {
    useJUnitPlatform()
    testLogging {
      events "started", "passed", "skipped", "failed"
      exceptionFormat = 'full'
      showExceptions = true
    }
  }
  if (rootProject.file("hooks.gradle").exists()) {
    apply from: rootProject.file("hooks.gradle")
  }
}
